@using DrewKestellSite.ViewModels
@using Newtonsoft.Json;

@model ArticleViewModel

<div id="article-form">
    <div class="form-group">
        <label>Slug</label>
        <input type="text" v-model="article.Slug" name="slug" />
    </div>

    <div class="form-group">
        <label>Title</label>
        <input type="text" v-model="article.Title" name="title" />
    </div>

    <div class="form-group">
        <label>Description</label>
        <input type="text" v-model="article.Description" name="description" />
    </div>

    <div class="form-group">
        <label>Thumbnail Url</label>
        <input type="text" v-model="article.ThumbnailUrl" name="thumbnailUrl" />
    </div>

    <h2>Chapters</h2>
    <button v-on:click="addChapter()" type="button" class="btn btn-primary m-b-l">New Chapter</button>

    <div class="chapter m-b-l" v-for="(chapter, index) in article.ArticleChapters">
        <div class="form-group">
            <label>Link Text</label>
            <input type="text" v-model="chapter.Name" :name="'articleChapters[' + index + '].linkText'" />
        </div>

        <div class="form-group">
            <label>Text</label>
            <textarea :name="'articleChapters[' + index + '].text'">{{ chapter.Text }}</textarea>
        </div>
        <span class="delete-chapter" v-on:click="deleteChapter(chapter)">X</span>
    </div>

    <button type="submit" class="btn btn-submit">Submit</button>
</div>

<environment include="Development">
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</environment>
<environment exclude="Development">
    <script src="https://cdn.jsdelivr.net/npm/vue"></script>
</environment>

<script>
    var app = new Vue({
        el: '#article-form',
        data: {
            article: @Html.Raw(JsonConvert.SerializeObject(Model))
        },
        methods: {
            addChapter: function () {
                this.article.ArticleChapters.push({});
            },
            deleteChapter: function (chapter) {
                this.article.ArticleChapters.splice(this.article.ArticleChapters.indexOf(chapter), 1);
            }
        }
    })
</script>